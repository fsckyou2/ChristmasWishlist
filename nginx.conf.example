# Nginx Configuration Example for Christmas Wishlist
# This is a sample configuration for hosting the app behind Nginx reverse proxy with HTTPS

# HTTP server - redirects all traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name yourdomain.com www.yourdomain.com;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server - main configuration
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name yourdomain.com www.yourdomain.com;

    # SSL Configuration
    # Replace with your SSL certificate paths
    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Content Security Policy (adjust as needed)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.tailwindcss.com; style-src 'self' 'unsafe-inline' https://cdn.tailwindcss.com; img-src 'self' data: https:; font-src 'self' data:;" always;

    # Client body size limit (for file uploads if added later)
    client_max_body_size 10M;

    # Logging
    access_log /var/log/nginx/wishlist-access.log;
    error_log /var/log/nginx/wishlist-error.log;

    # Root location - proxy to Flask app
    location / {
        # Proxy to Gunicorn running on localhost:5000
        proxy_pass http://127.0.0.1:5000;

        # Proxy headers for reverse proxy support
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # WebSocket support (if needed in future)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Static files (optional - serve directly from Nginx for better performance)
    # Uncomment if you want Nginx to serve static files instead of Flask
    # location /static/ {
    #     alias /path/to/ChristmasWishlist/app/static/;
    #     expires 30d;
    #     add_header Cache-Control "public, immutable";
    # }

    # Favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    # Robots.txt (create this file if needed)
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }

    # Health check endpoint (if you add one)
    location /health {
        proxy_pass http://127.0.0.1:5000/health;
        access_log off;
    }
}

# Configuration for running via Docker
# If running the app in Docker, use this instead:
#
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name yourdomain.com;
#
#     # ... SSL and security headers as above ...
#
#     location / {
#         # Proxy to Docker container
#         proxy_pass http://127.0.0.1:5000;  # Or docker service name if on same network
#
#         # Same proxy headers as above
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Forwarded-Host $host;
#     }
# }
