name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run tests with coverage
      run: |
        pytest --cov=app --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.13'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Check code formatting with black
      run: |
        black --check --diff app/ tests/ config.py run.py

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 app/ tests/ config.py run.py --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. Max line length is 120.
        flake8 app/ tests/ config.py run.py --count --exit-zero --max-line-length=120 --statistics

  docker:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t christmas-wishlist:test .

    - name: Test Docker container starts
      run: |
        docker run -d --name test-container \
          -e SECRET_KEY=test-secret-key \
          -e MAIL_USERNAME=test \
          -e MAIL_PASSWORD=test \
          -e ADMIN_EMAIL=test@example.com \
          -e ADMIN_NAME="Test Admin" \
          christmas-wishlist:test

        # Wait for container to start
        sleep 5

        # Check if container is running
        docker ps | grep test-container

        # Check logs for any startup errors
        docker logs test-container

        # Cleanup
        docker stop test-container
        docker rm test-container
